deployment:
  tasks:
    - /bin/bash -lc 'set -euo pipefail; TS() { date -u +%FT%TZ; }; DEPLOY_ROOT="/home/imsfrkmv/Almari2"; DEPLOY_LOG="$HOME/deploy.log"; echo "[$(TS)] starting deploy to $DEPLOY_ROOT" >> "$DEPLOY_LOG"; /bin/mkdir -p "$DEPLOY_ROOT"; RSYNC_BIN=$(command -v rsync || true); if [ -n "$RSYNC_BIN" ]; then "$RSYNC_BIN" -a --delete --exclude ".git" --exclude "node_modules" --exclude ".next" --exclude ".github" --exclude "cpanel-deploy.sh" --exclude "build-no-swc.sh" ./ "$DEPLOY_ROOT"/; else find "$DEPLOY_ROOT" -mindepth 1 -maxdepth 1 -not -name ".next" -exec rm -rf {} + || true; /bin/cp -a ./ "$DEPLOY_ROOT"/; fi; echo "[$(TS)] synced repo files" >> "$DEPLOY_LOG"; /bin/chmod -R g+w "$DEPLOY_ROOT" || true; APP_NAME=$(basename "$DEPLOY_ROOT"); NODEVENV_BASE="$HOME/nodevenv/$APP_NAME"; NPM_BIN=""; if [ -x "$NODEVENV_BASE/20/bin/npm" ]; then NPM_BIN="$NODEVENV_BASE/20/bin/npm"; elif [ -x "$NODEVENV_BASE/18/bin/npm" ]; then NPM_BIN="$NODEVENV_BASE/18/bin/npm"; else CAND=$(ls -d "$NODEVENV_BASE"/*/bin/npm 2>/dev/null | sort -V | tail -n1 || true); if [ -n "$CAND" ] && [ -x "$CAND" ]; then NPM_BIN="$CAND"; fi; fi; echo "[$(TS)] resolved npm: ${NPM_BIN:-not-found}" >> "$DEPLOY_LOG"; if [ -n "$NPM_BIN" ] && [ -x "$NPM_BIN" ]; then cd "$DEPLOY_ROOT"; echo "[$(TS)] installing deps" >> "$DEPLOY_LOG"; if [ -f package-lock.json ]; then "$NPM_BIN" ci --no-audit --no-fund --loglevel=error; else "$NPM_BIN" install --no-audit --no-fund --loglevel=error; fi; echo "[$(TS)] building next" >> "$DEPLOY_LOG"; NODE_ENV=production NEXT_TELEMETRY_DISABLED=1 UV_USE_IO_URING=0 CPANEL_BUILD=true DISABLE_MINIFICATION=true NODE_OPTIONS="${NODE_OPTIONS:---max-old-space-size=512}" "$NPM_BIN" run build; echo "[$(TS)] build done" >> "$DEPLOY_LOG"; /bin/mkdir -p "$DEPLOY_ROOT"/logs; /usr/bin/touch "$DEPLOY_ROOT"/.deploy_stamp; echo "[$(TS)] wrote deploy stamp" >> "$DEPLOY_LOG"; else echo "[$(TS)] WARN: npm not found under $NODEVENV_BASE" >> "$DEPLOY_LOG"; fi; /bin/mkdir -p "$DEPLOY_ROOT"/tmp && /usr/bin/touch "$DEPLOY_ROOT"/tmp/restart.txt; echo "[$(TS)] restart signaled" >> "$DEPLOY_LOG"'
